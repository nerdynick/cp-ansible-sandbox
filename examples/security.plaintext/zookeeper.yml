---
- name: Zookeeper Status Finding
  hosts: zookeeper
  gather_facts: false
  tags: zookeeper
  environment: "{{ proxy_env }}"
  tasks:
    - import_role:
        name: confluent.variables

    - name: Check if Zookeeper Service Running
      shell: "systemctl show -p SubState {{zookeeper_service_name}}"
      changed_when: false
      # On some SELinux enabled hosts this command will error out, handled in next set_fact task
      failed_when: false
      check_mode: false
      register: substate

    - set_fact:
        install_pattern: "{{ 'parallel' if substate.stdout != 'SubState=running' or substate.rc == 1 or zookeeper_deployment_strategy == 'parallel' else 'serial' }}"

    - name: "Group Hosts by Installation Pattern: Parallel or Serial"
      group_by:
        key: zookeeper_{{install_pattern}}
    

- name: Zookeeper Parallel Provisioning
  hosts: zookeeper_parallel
  gather_facts: false
  tags: zookeeper
  environment: "{{ proxy_env }}"
  tasks:
    - import_role:
        name: confluent.zookeeper

- name: Zookeeper Serial Ordering
  hosts: zookeeper_serial
  gather_facts: false
  tags: zookeeper
  environment: "{{ proxy_env }}"
  vars_files:
    - roles/confluent.zookeeper/defaults/main.yml
  tasks:
    - import_role:
        name: confluent.variables

    - name: Get Leader/Follower
      shell: "{{zookeeper_health_check_command}} | grep Mode"
      args:
        executable: /bin/bash
      register: leader_query
      changed_when: false
      check_mode: false

    - set_fact:
        # Modes are either: follower, leader, standalone, will treat standalone as leaders
        mode: "{{ 'follower' if 'follower' in leader_query.stdout else 'leader' }}"

    - debug:
        msg: "{{leader_query.stdout}}"

    - name: "Group Hosts by Zookeeper Mode: Follower or Leader"
      group_by:
        key: zookeeper_{{mode}}

- name: Zookeeper Followers Provisioning
  hosts: zookeeper_follower
  serial: 1
  gather_facts: false
  tags: zookeeper
  environment: "{{ proxy_env }}"
  tasks:
    - import_role:
        name: confluent.zookeeper

    - name: Proceed Prompt
      pause:
        prompt: "Press Enter to Proceed to Next Node. Ctrl + C to Abort"
      when: zookeeper_pause_rolling_deployment|bool

- name: Zookeeper Leader Provisioning
  hosts: zookeeper_leader
  gather_facts: false
  tags: zookeeper
  environment: "{{ proxy_env }}"
  tasks:
    - import_role:
        name: confluent.zookeeper

    - name: Proceed Prompt
      pause:
        prompt: "Press Enter to Proceed to Next Node. Ctrl + C to Abort"
      when: zookeeper_pause_rolling_deployment|bool
